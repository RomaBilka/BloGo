openapi: 3.0.1
info:
  title: REST API
  description: Standart REST API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
  - name: User
    description: Operations about user
  - name: Product
    description: Operations about product
paths:
  /users:
    get:
      tags:
        - User
      summary: All users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        400:
          description: Bad request, empty username or id
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /user:
    post:
      tags:
        - "User"
      summary: "Create a user in the store with data"
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'

      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: "Bad Request"
  /user/{id}:
    get:
      tags:
        - "User"
      summary: "Find user by ID"
      description: "Returns a single user"
      parameters:
        - in: path
          name: "id"
          description: "Id of user"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"
    put:
      tags:
        - "User"
      summary: "Updates a user in the store with data"
      description: ""
      parameters:
        - in: path
          name: "id"
          description: "Id of user that needs to be updated"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        "202":
          description: "Accepted"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"
    delete:
      tags:
        - "User"
      summary: "Deletes the user"
      description: ""
      parameters:
        - in: "path"
          name: "id"
          description: "User id to delete"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "400":
          description: "Invalid Id supplied"
        "204":
          description: "No Content"
  /products:
    get:
      tags:
        - Product
      summary: All products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /product:
    post:
      tags:
        - "Product"
      summary: "Create a product in the store with data"
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'

      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "400":
          description: "Bad Request"
  /product/{id}:
    get:
      tags:
        - "Product"
      summary: "Find product by ID"
      description: "Returns a single product"
      parameters:
        - in: path
          name: "id"
          description: "Id of product"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
    put:
      tags:
        - "Product"
      summary: "Updates a product in the store with data"
      description: ""
      parameters:
        - in: path
          name: "id"
          description: "Id of product that needs to be updated"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'

      responses:
        "202":
          description: "Accepted"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
    delete:
      tags:
        - "Product"
      summary: "Deletes the product"
      description: ""
      parameters:
        - in: "path"
          name: "id"
          description: "Product id to delete"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "400":
          description: "Invalid Id supplied"
        "204":
          description: "No Content"
components:
  schemas:
    CreateUserRequest:
      type: object
      properties:
        name:
          description: "Name user"
          type: "string"
        email:
          description: "email user"
          type: "string"
    User:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: string
        email:
          type: "string"
    CreateProductRequest:
      type: object
      properties:
        name:
          description: "Name product"
          type: "string"
        description:
          description: "Product description"
          type: "string"
        image:
          description: "Product image"
          type: "string"
        price:
          description: "Product price"
          type: "integer"
        count:
          description: "Product count"
          type: "integer"
    Product:
      type: object
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: string
        description:
          type: "string"
        price:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"